local api = vim.api
local blend = require("themes.util").blend
local M = {}

M.get = function(c)
  local b = c.bg
  local g = {
    ["@annotation"]                   = { link = "PreProc" },
    ["@attribute"]                    = { link = "PreProc" },
    ["@boolean"]                      = { link = "Boolean" },
    ["@character"]                    = { link = "Character" },
    ["@character.printf"]             = { link = "SpecialChar" },
    ["@character.special"]            = { link = "SpecialChar" },
    ["@comment"]                      = { link = "Comment" },
    ["@comment.error"]                = { fg = c.red },
    ["@comment.hint"]                 = { fg = c.teal },
    ["@comment.info"]                 = { fg = c.blue2 },
    ["@comment.note"]                 = { fg = c.teal },
    ["@comment.todo"]                 = { fg = c.blue },
    ["@comment.warning"]              = { fg = c.yellow },
    ["@constant"]                     = { link = "Constant" },
    ["@constant.builtin"]             = { link = "Special" },
    ["@constant.macro"]               = { link = "Define" },
    ["@constructor"]                  = { fg = c.magenta },
    ["@constructor.tsx"]              = { fg = c.blue1 },
    ["@diff.delta"]                   = { link = "DiffChange" },
    ["@diff.minus"]                   = { link = "DiffDelete" },
    ["@diff.plus"]                    = { link = "DiffAdd" },
    ["@function"]                     = { link = "Function" },
    ["@function.builtin"]             = { link = "Special" },
    ["@function.call"]                = { link = "Function" },
    ["@function.macro"]               = { link = "Macro" },
    ["@function.method"]              = { link = "Function" },
    ["@function.method.call"]         = { link = "Function" },
    ["@keyword"]                      = { fg = c.purple },
    ["@keyword.conditional"]          = { link = "Conditional" },
    ["@keyword.coroutine"]            = { link = "@keyword" },
    ["@keyword.debug"]                = { link = "Debug" },
    ["@keyword.directive"]            = { link = "PreProc" },
    ["@keyword.directive.define"]     = { link = "Define" },
    ["@keyword.exception"]            = { link = "Exception" },
    ["@keyword.function"]             = { fg = c.magenta },
    ["@keyword.import"]               = { link = "Include" },
    ["@keyword.operator"]             = { link = "@operator" },
    ["@keyword.repeat"]               = { link = "Repeat" },
    ["@keyword.return"]               = { link = "@keyword" },
    ["@keyword.storage"]              = { link = "StorageClass" },
    ["@label"]                        = { link = "Function" },
    ["@markup"]                       = { link = "@none" },
    ["@markup.emphasis"]              = { italic = true },
    ["@markup.environment"]           = { link = "Macro" },
    ["@markup.environment.name"]      = { link = "Type" },
    ["@markup.heading"]               = { link = "Title" },
    ["@markup.italic"]                = { italic = true },
    ["@markup.link"]                  = { fg = c.teal },
    ["@markup.link.label"]            = { link = "SpecialChar" },
    ["@markup.link.label.symbol"]     = { link = "Identifier" },
    ["@markup.link.url"]              = { link = "Underlined" },
    ["@markup.list"]                  = { fg = c.blue5 },
    ["@markup.list.checked"]          = { fg = c.teal },
    ["@markup.list.markdown"]         = { fg = c.orange, bold = true },
    ["@markup.list.unchecked"]        = { fg = c.blue },
    ["@markup.math"]                  = { link = "Special" },
    ["@markup.raw"]                   = { link = "String" },
    ["@markup.raw.markdown_inline"]   = { bg = c.terminal_black, fg = c.blue },
    ["@markup.strikethrough"]         = { strikethrough = true },
    ["@markup.strong"]                = { bold = true },
    ["@markup.underline"]             = { underline = true },
    ["@module"]                       = { link = "Directory" },
    ["@module.builtin"]               = { fg = c.red },
    ["@namespace.builtin"]            = { link = "@variable.builtin" },
    ["@none"]                         = {},
    ["@number"]                       = { link = "Number" },
    ["@number.float"]                 = { link = "Float" },
    ["@operator"]                     = { link = "Operator" },
    ["@property"]                     = { fg = c.teal },
    ["@punctuation.bracket"]          = { fg = c.fg_dark },
    ["@punctuation.delimiter"]        = { fg = c.blue5 },
    ["@punctuation.special"]          = { fg = c.blue5 },
    ["@punctuation.special.markdown"] = { fg = c.orange },
    ["@string"]                       = { link = "String" },
    ["@string.documentation"]         = { fg = c.yellow },
    ["@string.escape"]                = { fg = c.magenta },
    ["@string.regexp"]                = { fg = c.blue6 },
    ["@tag"]                          = { link = "Label" },
    ["@tag.attribute"]                = { link = "@property" },
    ["@tag.delimiter"]                = { link = "Delimiter" },
    ["@tag.delimiter.tsx"]            = { fg = blend(c.blue, 0.7, b) },
    ["@tag.tsx"]                      = { fg = c.red },
    ["@tag.javascript"]               = { fg = c.red },
    ["@type"]                         = { link = "Type" },
    ["@type.builtin"]                 = { fg = blend(c.blue1, 0.85, b) },
    ["@type.definition"]              = { link = "Typedef" },
    ["@type.qualifier"]               = { link = "@keyword" },
    ["@variable"]                     = { fg = c.fg },
    ["@variable.builtin"]             = { link = "@keyword" },
    ["@variable.builtin.c"]           = { fg = c.red },
    ["@variable.builtin.python"]      = { fg = c.red, italic = true },
    ["@variable.member"]              = { fg = c.teal },
    ["@variable.parameter"]           = { fg = c.red },
    ["@variable.parameter.builtin"]   = { fg = c.red },
  }

  ---@format disable-next
  local hl = api.nvim_set_hl
  for k, v in pairs(g) do hl(0, k, v) end
end

return M
