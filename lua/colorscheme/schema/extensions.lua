local M = {}

M.get = function(c)
  return {
    -- blink.cmp
    BlinkCmpDoc = { fg = c.fg, bg = c.bg_dark },
    BlinkCmpDocBorder = { fg = c.border_highlight, bg = c.bg_dark },
    BlinkCmpGhostText = { fg = c.terminal_black },
    BlinkCmpKindCodeium = { fg = c.teal, bg = c.none },
    BlinkCmpKindCopilot = { fg = c.teal, bg = c.none },
    BlinkCmpKindDefault = { fg = c.fg_dark, bg = c.none },
    BlinkCmpKindSupermaven = { fg = c.teal, bg = c.none },
    BlinkCmpKindTabNine = { fg = c.teal, bg = c.none },
    BlinkCmpLabel = { fg = c.fg, bg = c.none },
    BlinkCmpLabelDeprecated = { fg = c.fg_gutter, bg = c.none, strikethrough = true },
    BlinkCmpLabelMatch = { fg = c.blue1, bg = c.none },
    BlinkCmpMenu = { fg = c.fg, bg = c.bg_dark },
    BlinkCmpMenuBorder = { fg = c.border_highlight, bg = c.bg_dark },
    BlinkCmpSignatureHelp = { fg = c.fg, bg = c.bg_dark },
    BlinkCmpSignatureHelpBorder = { fg = c.border_highlight, bg = c.bg_dark },
    BlinkCmpKindArray = { link = "@punctuation.bracket" },
    BlinkCmpKindBoolean = { link = "@boolean" },
    BlinkCmpKindClass = { link = "@type" },
    BlinkCmpKindColor = { link = "Special" },
    BlinkCmpKindConstant = { link = "Constant" },
    BlinkCmpKindConstructor = { link = "@constructor" },
    BlinkCmpKindEnum = { link = "@lsp.type.enum" },
    BlinkCmpKindEnumMember = { link = "@lsp.type.enumMember" },
    BlinkCmpKindEvent = { link = "Special" },
    BlinkCmpKindField = { link = "@variable.member" },
    BlinkCmpKindFile = { link = "Normal" },
    BlinkCmpKindFolder = { link = "Directory" },
    BlinkCmpKindFunction = { link = "Function" },
    BlinkCmpKindInterface = { link = "@lsp.type.interface" },
    BlinkCmpKindKey = { link = "@variable.member" },
    BlinkCmpKindKeyword = { link = "@lsp.type.keyword" },
    BlinkCmpKindMethod = { link = "@function.method" },
    BlinkCmpKindModule = { link = "@module" },
    BlinkCmpKindNamespace = { link = "@module" },
    BlinkCmpKindNull = { link = "@constant.builtin" },
    BlinkCmpKindNumber = { link = "@number" },
    BlinkCmpKindObject = { link = "Constant" },
    BlinkCmpKindOperator = { link = "Operator" },
    BlinkCmpKindPackage = { link = "@module" },
    BlinkCmpKindProperty = { link = "@property" },
    BlinkCmpKindReference = { link = "@markup.link" },
    BlinkCmpKindSnippet = { link = "Conceal" },
    BlinkCmpKindString = { link = "@string" },
    BlinkCmpKindStruct = { link = "@lsp.type.struct" },
    BlinkCmpKindUnit = { link = "@lsp.type.struct" },
    BlinkCmpKindText = { link = "@markup" },
    BlinkCmpKindTypeParameter = { link = "@lsp.type.typeParameter" },
    BlinkCmpKindVariable = { link = "@variable" },
    BlinkCmpKindValue = { link = "@string" },
    -- neo-tree.nvim
    NeoTreeDimText = { fg = c.fg_gutter },
    NeoTreeFileName = { fg = c.fg_dark },
    NeoTreeGitModified = { fg = c.orange },
    NeoTreeGitStaged = { fg = c.teal },
    NeoTreeGitUntracked = { fg = c.magenta },
    NeoTreeNormal = { link = "Normal" },
    NeoTreeNormalNC = { link = "NeoTreeNormalNC" },
    NeoTreeTabActive = { fg = c.blue, bg = c.bg_dark, bold = true },
    NeoTreeTabInactive = { fg = c.dark3, bg = c.dark },
    NeoTreeRootName = { fg = c.comment, bold = true },
    NeoTreeTabSeparatorActive = { fg = c.blue, bg = c.bg_dark },
    NeoTreeTabSeparatorInactive = { fg = c.bg, bg = c.dark },
  }
end

return M
